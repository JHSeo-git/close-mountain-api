// Generated by https://quicktype.io

export function isGoogleError(error: any): error is GoogleError {
  return (
    error.response !== undefined &&
    error.config !== undefined &&
    error.code !== undefined
  );
}

export interface GoogleError {
  response: Response;
  config: Config;
  code: number;
  errors: ErrorElement[];
}

export interface Config {
  url: string;
  method: string;
  headers: Headers;
  userAgentDirectives: UserAgentDirective[];
  params: Params;
  retry: boolean;
  responseType: string;
  retryConfig: RetryConfig;
}

export interface Headers {
  'x-goog-api-client': string;
  'Accept-Encoding': string;
  'User-Agent': string;
  Accept: string;
}

export interface Params {
  oauth_token: string;
  access_token: string;
  personFields: string;
}

export interface RetryConfig {
  currentRetryAttempt: number;
  retry: number;
  httpMethodsToRetry: string[];
  noResponseRetries: number;
  statusCodesToRetry: Array<number[]>;
}

export interface UserAgentDirective {
  product: string;
  version: string;
  comment: string;
}

export interface ErrorElement {
  message: string;
  domain: string;
  reason: string;
  location: string;
  locationType: string;
}

export interface Response {
  config: Config;
  data: Data;
  headers: { [key: string]: string };
  status: number;
  statusText: string;
  request: Request;
}

export interface Data {
  error: DataError;
}

export interface DataError {
  code: number;
  message: string;
  errors: ErrorElement[];
  status: string;
}

export interface Request {
  responseURL: string;
}
